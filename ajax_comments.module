<?php
// $Id$


function ajax_comments_form_alter($form_id, &$form) {
  if (($form_id == 'comment_form')&&(arg(1)!='edit')) {
    /*if (!isset($form['op'])) {
      $form['op'] = array(
        '#type' => 'hidden',
        '#value' => '',
        '#weight' => -5
      );
    }*/
    $form['#prefix'] = '<div id="comment-preview"></div>';
    //$form['#submit'] = array('your_function_submit' => array());
    
    if (!empty($_POST) && ($_POST['form_id'] == $form_id)) {
      // Redirect on successful submit, i.e., if there are no errors.
      //print_r($form);
      if (is_array($form['#pre_render'])) {
        $form['#pre_render'][] = 'ajax_comments_dispatch';
      }
      else {
        $form['#pre_render'] = array('ajax_comments_dispatch');
      }
    }
    $form['#submit'] = array('ajax_comments_submit_dispatch' => array());

    jquery_form_add();
    $path = drupal_get_path('module', 'ajax_comments');
    drupal_add_js($path.'/ajax_comments.js','module');
    drupal_add_js(array(
      'ajax_comments_form_alter' => array(
        'cleanurls' => (bool) variable_get('clean_url', '0'),
        'basePath' => base_path(),
      ),
    ), 'setting');
    
    
  }
}



function ajax_comments_menu($may_cache) {
  global $user;
  $items = array();
  if (!$may_cache) {
    $id = arg(1);
    if (arg(0) == 'get_token') {
      $items[] = array(
      'path' => 'get_token/'.$id,
      'callback' => 'get_token',
      'callback arguments' => array($id),
      'type' => MENU_CALLBACK,
      'access' => TRUE,
      );
    }
    $items[] = array(
      'path' => 'ajaxsubmit/dispatch',
      'title' => t('ajaxsubmit'),
      'access' => user_access('access content'),
      'type' => MENU_CALLBACK,
      'callback' => 'ajax_comments_dispatch'
     );
  }
  return $items;
}

function get_token($id){
  print(drupal_get_token($id));
}


function ajax_comments_submit_dispatch($form_id, $form_values) {
  $edit = _comment_form_submit($form_values);
  if ($cid = comment_save($edit)) {
    $comment = (object)$edit;
    
    $errors = form_get_errors();
    
    if (!$errors) {
	    // Attach the user and time information.
	    if ($edit['author']) {
	      $account = user_load(array('name' => $edit['author']));
	    }
	    elseif ($user->uid && !isset($edit['is_anonymous'])) {
	      $account = $user;
	    }
	    if ($account) {
	      $comment->uid = $account->uid;
	      $comment->name = check_plain($account->name);
	    }
	    $comment->cid = $cid;
	    $comment->timestamp = $edit['timestamp'] ? $edit['timestamp'] : time();
	    $preview = theme('comment_view', $comment);
	    if ($comment->pid)
	      $preview = '<div class="indented">'.$preview.'<div>';
    }
    $redirect = '';
    if (!$errors)
      $redirect = drupal_get_path_alias('node/'.$comment->nid).'?r'.$cid.'#comment-'.$cid;
    
    $result = array(
      'status' => TRUE,
      'data' =>  array(
        'errors' => $errors,
        'message' => '',
        'preview' => $preview,
        'destination' => $redirect
      )
    );
    print drupal_to_js($result);
  }
}

function ajax_comments_dispatch($form_id = NULL, $form = NULL) {
  if (module_exists('captcha')) {
    captcha_form_alter('comment_form',$form_c);
    captcha_pre_render('comment_form',$form_c);
    
    $form_c = array();
    $form_c['captcha']['captcha_token']['#id'] = 'edit-captcha-token';
    $form_c['captcha']['captcha_response']['#id'] = 'edit-captcha-response';
    $form_c['captcha']['captcha_token']['#name'] = 'captcha_token';
    $form_c['captcha']['captcha_response']['#name'] = 'captcha_response';

    $captcha = @drupal_render($form_c);
  }
  
  $result = array(
    'status' => TRUE,
    'data' =>  array(
      'errors' => form_get_errors(),
      'message' => theme('status_messages'),
      'preview' => isset($form[arg(0) . '_preview']) && !empty($form[arg(0) . '_preview']['#value']) ? $form[arg(0) . '_preview']['#value'] : NULL,
      'destination' => '',
      'captcha' => $captcha,
    )
  );

  print drupal_to_js($result);
  exit();
}



